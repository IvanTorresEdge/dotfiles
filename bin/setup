#!/usr/bin/env node

var fs       = require('fs'),
    Mustache = require('mustache'),
    optimist = require('optimist'),
    path     = require('path');

var argv = optimist.usage('Usage -n Real Name -m user@example.com -u username -t token', {
    'n': {
        'type'        : 'string',
        'description' : 'Your name',
        'alias'       : 'name'
    },
    'm': {
        'type'        : 'string',
        'description' : 'Your email',
        'alias'       : 'email'
    },
    'u': {
        'type'        : 'string',
        'description' : 'Github username',
        'alias'       : 'username'
    },
}).demand(['m']).argv;

var HOME = process.env['HOME'];

var files = {
    'ackrc': {
        'src': path.join(__dirname, '../ackrc'),
        'dest': path.join(HOME, '/.ackrc')
    },
    'gemrc': {
        'src': path.join(__dirname, '../gemrc'),
        'dest': path.join(HOME, '/.gemrc')
    },
    'gitignore': {
        'src': path.join(__dirname, '../gitignore'),
        'dest': path.join(HOME, '/.gitignore')
    },
    'gvimrc': {
        'src': path.join(__dirname, '../gvimrc'),
        'dest': path.join(HOME, '/.gvimrc')
    },
    'vim': {
        'src': path.join(__dirname, '../vim'),
        'dest': path.join(HOME, '/.vim')
    },
    'vimrc': {
        'src': path.join(__dirname, '../vimrc'),
        'dest': path.join(HOME, '/.vimrc')
    },
    'zshrc': {
        'src': path.join(__dirname, '../zshrc'),
        'dest': path.join(HOME, '/.zshrc')
    },
    'zsh-theme': {
        'src': path.join(__dirname, '../mexpolk.zsh-theme'),
        'dest': path.join(HOME, '/.oh-my-zsh/themes/mexpolk.zsh-theme')
    },
    'tmux': {
        'src': path.join(__dirname, '../tmux.conf'),
        'dest': path.join(HOME, '/.tmux.conf')
    },
    'nvim': {
        'src': path.join(HOME, '/.vim'),
        'dest': path.join(HOME, '/.config/nvim')
    },
    'nvimrc': {
        'src': path.join(__dirname, '../vimrc'),
        'dest': path.join(HOME, '/.config/nvim/init.vim')
    },
};

Object.keys(files).forEach(function (key) {
    var src  = files[key].src,
        dest = files[key].dest;
    fs.unlink(dest, function (err) {
        fs.symlink(src, dest, function (err) {
            if (err) { console.log(err, dest); throw err; }
            console.log(dest, 'OK');
        });
    });
});

fs.readFile(path.join(__dirname, '../gitconfig.mustache'), 'utf8', function (err, data) {
    var file   = path.join(HOME, '/.gitconfig'),
        config = Mustache.to_html(data, argv);
    fs.unlink(file, function (err) {
        fs.writeFile(file, config, function (err) {
            if (err) { console.log(err); throw err; }
            console.log(file, 'OK');
        });
    });
});
